// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package rmi.print.server;

public final class ServidorPrimoParImpar_Stub
    extends java.rmi.server.RemoteStub
    implements rmi.print.common.InterfazPrimoParImpar, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_numPrimo_0;
    private static java.lang.reflect.Method $method_parImpar_1;
    
    static {
	try {
	    $method_numPrimo_0 = rmi.print.common.InterfazPrimoParImpar.class.getMethod("numPrimo", new java.lang.Class[] {int.class});
	    $method_parImpar_1 = rmi.print.common.InterfazPrimoParImpar.class.getMethod("parImpar", new java.lang.Class[] {int.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public ServidorPrimoParImpar_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of numPrimo(int)
    public boolean numPrimo(int $param_int_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_numPrimo_0, new java.lang.Object[] {new java.lang.Integer($param_int_1)}, -7111107396479576666L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of parImpar(int)
    public boolean parImpar(int $param_int_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_parImpar_1, new java.lang.Object[] {new java.lang.Integer($param_int_1)}, 5156413722904308823L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
